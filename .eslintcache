[{"/home/prateek/StudyTogether/frontend/study_dashboard/src/index.tsx":"1","/home/prateek/StudyTogether/frontend/study_dashboard/src/reportWebVitals.ts":"2","/home/prateek/StudyTogether/frontend/study_dashboard/src/App.tsx":"3","/home/prateek/StudyTogether/frontend/study_dashboard/src/pages/User/index.tsx":"4","/home/prateek/StudyTogether/frontend/study_dashboard/src/pages/Landing/index.tsx":"5","/home/prateek/StudyTogether/frontend/study_dashboard/src/pages/User/UserTodos.tsx":"6","/home/prateek/StudyTogether/frontend/study_dashboard/src/pages/User/UserStats.tsx":"7","/home/prateek/StudyTogether/frontend/study_dashboard/src/pages/User/UserInsights.tsx":"8","/home/prateek/StudyTogether/frontend/study_dashboard/src/components/CustomTooltipContent.tsx":"9"},{"size":628,"mtime":1614569827125,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1612143506930,"results":"12","hashOfConfig":"11"},{"size":1394,"mtime":1612767559357,"results":"13","hashOfConfig":"11"},{"size":529,"mtime":1612143506930,"results":"14","hashOfConfig":"11"},{"size":375,"mtime":1612143506930,"results":"15","hashOfConfig":"11"},{"size":534,"mtime":1612143506930,"results":"16","hashOfConfig":"11"},{"size":11843,"mtime":1614569827125,"results":"17","hashOfConfig":"11"},{"size":543,"mtime":1612143506930,"results":"18","hashOfConfig":"11"},{"size":1740,"mtime":1614569827125,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lpbohh",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},"/home/prateek/StudyTogether/frontend/study_dashboard/src/index.tsx",[],"/home/prateek/StudyTogether/frontend/study_dashboard/src/reportWebVitals.ts",[],["42","43","44","45","46","47","48","49"],"/home/prateek/StudyTogether/frontend/study_dashboard/src/App.tsx",["50","51","52","53"],"import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport UserPage from './pages/User';\nimport Landing from './pages/Landing';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className=\"{classes.root}\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n              <MenuIcon />\n              </IconButton> */}\n          <Typography variant=\"h6\" className={classes.title}>\n            Study Together\n          </Typography>\n          <Button color=\"inherit\">Login</Button>\n        </Toolbar>\n      </AppBar>\n\n      <Switch>\n        <Route exact path=\"/\" component={Landing} />\n        <Route\n          path=\"/user\"\n          component={UserPage}\n        />\n      </Switch>\n    </div>\n\n  );\n}\n\nexport default App;\n","/home/prateek/StudyTogether/frontend/study_dashboard/src/pages/User/index.tsx",[],"/home/prateek/StudyTogether/frontend/study_dashboard/src/pages/Landing/index.tsx",[],"/home/prateek/StudyTogether/frontend/study_dashboard/src/pages/User/UserTodos.tsx",[],"/home/prateek/StudyTogether/frontend/study_dashboard/src/pages/User/UserStats.tsx",["54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72"],"import React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport {\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LabelList,\n} from 'recharts';\nimport { getUserStats } from '../../api';\n\nconst testData = [\n  {\n    date: 'Feb', hours: 100,\n  },\n  {\n    date: 'Mar', hours: 2210,\n  },\n  {\n    date: 'Apr', hours: 2290,\n  },\n  {\n    date: 'May', hours: 2000,\n  },\n  {\n    date: 'Jun', hours: 2181,\n  },\n  {\n    date: 'Jul', hours: 2500,\n  },\n  {\n    date: 'Aug', hours: 2100,\n  },\n];\n\n\ninterface ParamTypes {\n  userId: string\n}\n\n// display all time user studying\n// display this month user studying\n// display todays user studying\n// show line graph with user studying for this week, that can be scopped to other times\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nconst timestamp = new Date('May 23 2017').getTime();\nconst ONE_DAY = 86400000;\n\n/* const DATA : any[] = [\n *   { x0: ONE_DAY * 2, x: ONE_DAY * 3, y: 1 },\n *   { x0: ONE_DAY * 7, x: ONE_DAY * 8, y: 1 },\n *   { x0: ONE_DAY * 8, x: ONE_DAY * 9, y: 1 },\n *   { x0: ONE_DAY * 9, x: ONE_DAY * 10, y: 2 },\n *   { x0: ONE_DAY * 10, x: ONE_DAY * 11, y: 2.2 },\n *   { x0: ONE_DAY * 19, x: ONE_DAY * 20, y: 1 },\n *   { x0: ONE_DAY * 20, x: ONE_DAY * 21, y: 2.5 },\n *   { x0: ONE_DAY * 21, x: ONE_DAY * 24, y: 1 }\n * ].map(el => ({ x0: el.x0 + timestamp, x: el.x + timestamp, y: el.y }));\n *  */\n\n\nfunction sma(arr: any[], range: number, format: any) {\n  if (!Array.isArray(arr)) {\n    throw TypeError('expected first argument to be an array');\n  }\n\n  const fn = typeof format === 'function' ? format : toFixed;\n  const num = range || arr.length;\n  const res = [];\n  const len = arr.length + 1;\n  let idx = num - 1;\n  while ((idx += 1) < len) {\n    res.push(fn(avg(arr, idx, num)));\n  }\n  return res;\n}\n\n/**\n * Create an average for the specified range.\n *\n * ```js\n * console.log(avg([1, 2, 3, 4, 5, 6, 7, 8, 9], 5, 4));\n * //=> 3.5\n * ```\n * @param  {Array} `arr` Array to pull the range from.\n * @param  {Number} `idx` Index of element being calculated\n * @param  {Number} `range` Size of range to calculate.\n * @return {Number} Average of range.\n */\n\nfunction avg(arr: any[], idx: number, range: number) {\n  return sum(arr.slice(idx - range, idx)) / range;\n}\n\n/**\n * Calculate the sum of an array.\n * @param  {Array} `arr` Array\n * @return {Number} Sum\n */\n\nfunction sum(arr: any[]) {\n  let len = arr.length;\n  let num = 0;\n  while (len) {\n    len -= 1;\n    num += Number(arr[len]);\n  }\n  return num;\n}\n\n/**\n * Default format method.\n * @param  {Number} `n` Number to format.\n * @return {String} Formatted number.\n */\n\nfunction toFixed(n: any) {\n  return n.toFixed(2);\n}\n\nconst hourdata = [1, 1, 1, 2, 2.2, 1, 2.5];\n\nconst DATA: any[] = hourdata.map((el, index) => (\n  {\n    x0: index * ONE_DAY + timestamp,\n    x: (index + 1) * ONE_DAY + timestamp,\n    y: el,\n  }));\n\n\nconst MovingAverageData: any[] = sma(DATA, 3, undefined);\n\nconst formattedMovingData: any[] = MovingAverageData.map((el, index) => (\n  { x: (index + 3) * ONE_DAY + timestamp, y: el }\n));\n\nfunction UserStats() {\n  const { userId } = useParams<ParamTypes>();\n\n  const { loading, error, data } = useQuery(getUserStats);\n  const [series, setSeries] = useState();\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  if (data) {\n    console.log(data);\n    console.log(data.getUserStats.pastWeekTimeSeries.map((day: { datetime: string, y: number }) => ({\n      x: day.datetime,\n      y: day.y,\n    })));\n  }\n\n  // @ts-ignore\n  // @ts-ignore\n  // @ts-ignore\n  return (\n    <Container maxWidth=\"lg\">\n      <Grid\n        container\n        spacing={3}\n      >\n        <Grid item xs={12}>\n          <Paper>\n            <Grid container spacing={3}>\n              <Grid container item xs={6}>\n                <Grid item xs={6}>\n                  Hours Studied\n                </Grid>\n                <Grid item xs={6}>\n                  Leaderboard Placement\n                </Grid>\n                <Grid item xs={6}>\n                  0.9h\n                </Grid>\n                <Grid item xs={6}>\n                  #523\n                </Grid>\n              </Grid>\n              <Grid item xs={8}>\n                <BarChart\n                  width={500}\n                  height={300}\n                  data={testData}\n                  margin={{\n                    top: 5, right: 30, left: 20, bottom: 5,\n                  }}\n                >\n                  <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n                  <XAxis dataKey=\"date\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend />\n                  <Bar dataKey=\"hours\" fill=\"#8884d8\" />\n                </BarChart>\n              </Grid>\n              <Grid item xs={12}>\n                Last year\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item xs={4}>\n          <Paper>\n            Card 1\n          </Paper>\n        </Grid>\n        <Grid item xs={4}>\n          <Paper>\n            Card 2\n          </Paper>\n        </Grid>\n        <Grid item xs={4}>\n          <Paper>\n            Card 3\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default UserStats;\n","/home/prateek/StudyTogether/frontend/study_dashboard/src/pages/User/UserInsights.tsx",[],"/home/prateek/StudyTogether/frontend/study_dashboard/src/components/CustomTooltipContent.tsx",["73"],"import React from 'react';\n\n// @ts-ignore\nconst CustomTooltipContent = ({ active, payload, label }) => {\n\n  if (active && payload && payload.length) {\n    console.log(payload);\n    return (\n      <div\n        className=\"recharts-default-tooltip\"\n        style={{\n          margin: '0px',\n          padding: '10px',\n          backgroundColor: 'rgb(255, 255, 255)',\n          border: '1px solid rgb(204, 204, 204)',\n          whiteSpace: 'nowrap',\n        }}\n      >\n        <p className=\"recharts-tooltip-label\" style={{ margin: '0px' }}>{label}</p>\n        <ul className=\"recharts-tooltip-item-list\" style={{ padding: '0px', margin: '0px' }}>\n          <li\n            className=\"recharts-tooltip-item\"\n            style={{ display: 'block', paddingTop: '4px', paddingBottom: '4px', color: 'rgb(136, 132, 216)' }}\n          >\n            <span className=\"recharts-tooltip-item-name\">{payload[0].name}</span>\n            <span className=\"recharts-tooltip-item-separator\"> : </span>\n            <span className=\"recharts-tooltip-item-value\">{payload[0].value}</span>\n            <span className=\"recharts-tooltip-item-unit\"> </span>\n          </li>\n          <li\n            className=\"recharts-tooltip-item\"\n            style={{ display: 'block', paddingTop: '4px', paddingBottom: '4px', color: 'rgb(130, 202, 157)' }}\n          >\n            <span className=\"recharts-tooltip-item-name\">rank</span>\n            <span className=\"recharts-tooltip-item-separator\"> : </span>\n            <span className=\"recharts-tooltip-item-value\">{payload[0].payload.rank}</span>\n            <span className=\"recharts-tooltip-item-unit\"> </span>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport default CustomTooltipContent;\n",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":8,"column":8,"nodeType":"92","messageId":"93","endLine":8,"endColumn":18},{"ruleId":"94","severity":1,"message":"91","line":8,"column":8,"nodeType":"92","messageId":"93","endLine":8,"endColumn":18},{"ruleId":"90","severity":1,"message":"95","line":9,"column":8,"nodeType":"92","messageId":"93","endLine":9,"endColumn":16},{"ruleId":"94","severity":1,"message":"95","line":9,"column":8,"nodeType":"92","messageId":"93","endLine":9,"endColumn":16},{"ruleId":"94","severity":1,"message":"96","line":8,"column":8,"nodeType":"92","messageId":"93","endLine":8,"endColumn":20},{"ruleId":"90","severity":1,"message":"96","line":8,"column":8,"nodeType":"92","messageId":"93","endLine":8,"endColumn":20},{"ruleId":"97","severity":1,"message":"98","line":15,"column":1,"nodeType":"99","messageId":"100","endLine":15,"endColumn":101},{"ruleId":"94","severity":1,"message":"101","line":15,"column":18,"nodeType":"92","messageId":"93","endLine":15,"endColumn":22},{"ruleId":"90","severity":1,"message":"101","line":15,"column":18,"nodeType":"92","messageId":"93","endLine":15,"endColumn":22},{"ruleId":"94","severity":1,"message":"102","line":15,"column":62,"nodeType":"92","messageId":"93","endLine":15,"endColumn":68},{"ruleId":"90","severity":1,"message":"102","line":15,"column":62,"nodeType":"92","messageId":"93","endLine":15,"endColumn":68},{"ruleId":"90","severity":1,"message":"103","line":15,"column":70,"nodeType":"92","messageId":"93","endLine":15,"endColumn":79},{"ruleId":"94","severity":1,"message":"103","line":15,"column":70,"nodeType":"92","messageId":"93","endLine":15,"endColumn":79},{"ruleId":"94","severity":1,"message":"104","line":21,"column":7,"nodeType":"92","messageId":"93","endLine":21,"endColumn":15},{"ruleId":"90","severity":1,"message":"104","line":21,"column":7,"nodeType":"92","messageId":"93","endLine":21,"endColumn":15},{"ruleId":"90","severity":1,"message":"105","line":144,"column":7,"nodeType":"92","messageId":"93","endLine":144,"endColumn":33},{"ruleId":"94","severity":1,"message":"105","line":144,"column":7,"nodeType":"92","messageId":"93","endLine":144,"endColumn":33},{"ruleId":"90","severity":1,"message":"106","line":174,"column":11,"nodeType":"92","messageId":"93","endLine":174,"endColumn":17},{"ruleId":"94","severity":1,"message":"106","line":174,"column":11,"nodeType":"92","messageId":"93","endLine":174,"endColumn":17},{"ruleId":"107","severity":1,"message":"108","line":199,"column":5,"nodeType":"109","messageId":"110","endLine":199,"endColumn":16},{"ruleId":"107","severity":1,"message":"108","line":208,"column":11,"nodeType":"109","messageId":"110","endLine":208,"endColumn":22},{"ruleId":"111","severity":1,"message":"112","line":210,"column":6,"nodeType":"113","endLine":210,"endColumn":20,"suggestions":"114"},{"ruleId":"107","severity":1,"message":"108","line":216,"column":11,"nodeType":"109","messageId":"110","endLine":216,"endColumn":22},{"ruleId":"107","severity":1,"message":"108","line":7,"column":5,"nodeType":"109","messageId":"110","endLine":7,"endColumn":16},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"jsx-a11y/accessible-emoji",[],"lines-around-directive",["117"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'MenuIcon' is defined but never used.","'ListItemText' is defined but never used.","max-len","This line has a length of 100. Maximum allowed is 80.","Program","max","'Cell' is defined but never used.","'Legend' is defined but never used.","'LabelList' is defined but never used.","'testData' is assigned a value but never used.","'formattedMovingData' is assigned a value but never used.","'userId' is assigned a value but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchTimeSeries'. Either include it or remove the dependency array.","ArrayExpression",["118"],"no-global-assign","no-unsafe-negation","padding-line-between-statements",{"desc":"119","fix":"120"},"Update the dependencies array to be: [fetchTimeSeries, timeInterval]",{"range":"121","text":"122"},[4936,4950],"[fetchTimeSeries, timeInterval]"]